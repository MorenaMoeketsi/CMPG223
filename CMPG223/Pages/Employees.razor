@page "/employees"
@using CMPG223.Models
@using CMPG223.Services
@using CMPG223.Dtos
@using CMPG223.Controllers
@inject IEmployeeController _employeeController
<h2>Employees</h2>

@if (_employees == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    @if (!_noUpdate)
    {
        @if(_success)
        {
            <MudAlert Severity="Severity.Success" Variant="Variant.Filled">Database Updated</MudAlert>
        }
        else
        {
            <MudAlert Severity="Severity.Error" Variant="Variant.Filled">Unable To Save To Database</MudAlert>
        }
    }
    
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Surname</th>
            <th>Role</th>
            <th>Is Active</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var employee in _employees)
        {
            <tr>
                <td>@employee.Name</td>
                <td>@employee.Surname</td>
                <td>
                    <select @bind="employee.Role.RoleId">
                        <option>--Select Role--</option>
                        @foreach (var item in _roles)
                        {
                            <option value="@item.RoleId">@item.RoleName</option>
                        }
                    </select>
                </td>
                <td>
                    <MudCheckBox @bind-Checked="@employee.IsActive"></MudCheckBox>
                </td>
                <td>
                    <MudButton @onclick="@(() => Edit(employee))" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
                </td>
            </tr>
        }
         <h3>Add new employee</h3>
        <tr>
            <td>
                <input @bind="_newEmployee.Name"/>
            </td>
            <td>
                <input @bind="_newEmployee.Surname"/>
            </td>
            <td>
                <select @bind="_newEmployee.Role.RoleId">
                    <option>--Select Role--</option>
                    @foreach (var item in _roles)
                    {
                        <option value="@item.RoleId">@item.RoleName</option>
                    }
                </select>
            </td>
            <td>
                <MudCheckBox @bind-Checked="@_newEmployee.IsActive"></MudCheckBox>
            </td>
            <td>
                <MudButton @onclick="@(Add)" Variant="Variant.Filled" Color="Color.Primary">Add</MudButton>
            </td>
        </tr>

        </tbody>
    </table>
  
        
       
    
}

@code {

    bool _noUpdate = true;
    bool _success;
    private EmployeeDto _newEmployee = new EmployeeDto();
    private List<EmployeeDto> _employees;
    private EmployeeDto SelectedEmployee { get; set; } = new EmployeeDto();
    private List<Role> _roles = new List<Role>();

    protected override async Task OnInitializedAsync()
    {
        SelectedEmployee.Role = new Role();
        _newEmployee.Role = new Role();
        _employees = await _employeeController.GetEmployeeRoles();
        _roles = await _employeeController.GetRoles();
    }

    async Task Edit(EmployeeDto employee)
    {
        SelectedEmployee = employee;
        var success = await _employeeController.UpdateEmployee(SelectedEmployee);
        await FinishUpdate((success));
    }

    private async Task Add()
    {
        var success = await _employeeController.InsertEmployee(_newEmployee);
        await FinishUpdate((success));
    }

    private async Task FinishUpdate(bool success)
    {
        _noUpdate = false;
        _success = success;

        if (success)
            _employees = await _employeeController.GetEmployeeRoles();
    }

}